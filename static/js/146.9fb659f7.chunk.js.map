{"version":3,"file":"static/js/146.9fb659f7.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.js","components/ContactListItem/ContactListItem.styled.js","components/UpdateContact/UpdateContact.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","redux/filter/filterSelector.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${p => p.theme.spacing(4)};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.secondaryText};\n  width: 200px;\n  padding: ${p => p.theme.spacing(2)};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radius.normal};\n  :focus,\n  :hover {\n    border-color: ${p => p.theme.colors.hoverColor};\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  padding-top: ${p => p.theme.spacing(3)};\n  padding-bottom: ${p => p.theme.spacing(3)};\n  padding-left: ${p => p.theme.spacing(5)};\n  padding-right: ${p => p.theme.spacing(5)};\n  border-radius: ${p => p.theme.radius.normal};\n  border: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accentColor};\n  padding-top: ${p => p.theme.spacing(1)};\n  padding-bottom: ${p => p.theme.spacing(1)};\n  padding-left: ${p => p.theme.spacing(2)};\n  padding-right: ${p => p.theme.spacing(2)};\n  border-radius: ${p => p.theme.radius.normal};\n  border: none;\n  cursor: pointer;\n\n  :nth-child(odd) {\n    margin-right: ${p => p.theme.spacing(2)};\n  }\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const ContactForm = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n`;\n\nexport const ContactInfoText = styled.p`\n  :nth-child(odd) {\n    margin-right: ${p => p.theme.spacing(3)};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { updateContact } from 'redux/contacts/contactsOperations';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n} from 'components/AddContactForm/AddContactForm.styled';\n\nexport const UpdateContact = ({ id, initialValues, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateContact({ id, name, number }));\n    onSubmit();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder={initialValues.name}\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder={initialValues.number}\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Update contact</Button>\n    </Form>\n  );\n};\n\nUpdateContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  initialValues: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { useDispatch } from 'react-redux';\nimport {\n  Item,\n  Button,\n  ContactForm,\n  ContactInfo,\n  ContactInfoText,\n} from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { useState } from 'react';\nimport { UpdateContact } from 'components/UpdateContact/UpdateContact';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isUpdate, setIsUpdate] = useState(false);\n  const handleUpdate = () => {\n    setIsUpdate(true);\n  };\n\n  return (\n    <Item>\n      {isUpdate ? (\n        <ContactForm>\n          <UpdateContact\n            id={id}\n            initialValues={{ name, number }}\n            onSubmit={() => setIsUpdate(false)}\n          />\n        </ContactForm>\n      ) : (\n        <>\n          <ContactInfo>\n            <ContactInfoText>{name}</ContactInfoText>\n            <ContactInfoText>{number}</ContactInfoText>\n          </ContactInfo>\n          <div>\n            <Button onClick={handleUpdate} type=\"button\">\n              Update\n            </Button>\n            <Button onClick={() => dispatch(deleteContact(id))} type=\"button\">\n              Delete\n            </Button>\n          </div>\n        </>\n      )}\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  color: ${p => p.theme.colors.secondaryText};\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderSpinner = styled.div`\n  margin-top: 50px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderSpinner } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderSpinner>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderSpinner>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.trim().toLowerCase();\n    const result = contacts.filter(({ name, number }) => {\n      return (\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.trim().includes(normalizedFilter)\n      );\n    });\n    return result;\n  }\n);\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List, Text } from './ContactList.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {visibleContacts.length > 0 &&\n        visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          );\n        })}\n\n      {visibleContacts.length === 0 && <Text>No matches found</Text>}\n\n      {isLoading && !error && <Loader />}\n      {error && <p>{error}</p>}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(3)};\n  margin-bottom: ${p => p.theme.spacing(4)};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.secondaryText};\n  width: 200px;\n  padding: ${p => p.theme.spacing(2)};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radius.normal};\n  :focus,\n  :hover {\n    border-color: ${p => p.theme.colors.hoverColor};\n    outline: none;\n  }\n`;\n","export const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelector';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <Label>\n        Find contacts by name\n        <Input\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Filter contacts\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </Label>\n    </>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\n const ContactsPage = () => {\n  return (\n    <>\n       <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage\n"],"names":["Form","styled","p","theme","spacing","Label","fontWeights","bold","Input","colors","secondaryText","borders","normal","radius","hoverColor","Button","white","accentColor","Item","ContactForm","ContactInfo","ContactInfoText","UpdateContact","id","initialValues","onSubmit","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","target","value","e","preventDefault","updateContact","type","pattern","title","required","placeholder","onChange","ContactListItem","isUpdate","setIsUpdate","onClick","deleteContact","List","Text","LoaderSpinner","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","selectIsLoading","state","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","filter","normalizedFilter","trim","toLowerCase","includes","ContactList","useSelector","visibleContacts","useEffect","fetchContacts","length","map","selectFilter","Filter","setFilter"],"sourceRoot":""}